{"ast":null,"code":"var _jsxFileName = \"/Users/stacyjones/FarmaticVS/Farmatic/moisture-sensor-app/frontend/src/components/SensorDataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorDataDisplay = () => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch data from the backend\n    const fetchData = async () => {\n      try {\n        // Make sure the port matches your backend server\n        const response = await axios.get(\"http://localhost:8081/api/sensor-data\");\n        setSensorData(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error details:\", err);\n        setError(`Error fetching sensor data: ${err.message}`);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Moisture Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), !loading && !error && sensorData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sensor data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), sensorData.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sensorData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Moisture Level: \", data.moistureLevel, \", Timestamp:\", \" \", new Date(data.timestamp).toLocaleString()]\n      }, data._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorDataDisplay, \"x9zyruaK15xjWJ0lBIQ7Vs2YtSc=\");\n_c = SensorDataDisplay;\nexport default SensorDataDisplay;\nvar _c;\n$RefreshReg$(_c, \"SensorDataDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SensorDataDisplay","_s","sensorData","setSensorData","error","setError","loading","setLoading","fetchData","response","get","data","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","moistureLevel","Date","timestamp","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/stacyjones/FarmaticVS/Farmatic/moisture-sensor-app/frontend/src/components/SensorDataDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst SensorDataDisplay = () => {\n  const [sensorData, setSensorData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch data from the backend\n    const fetchData = async () => {\n      try {\n        // Make sure the port matches your backend server\n        const response = await axios.get(\n          \"http://localhost:8081/api/sensor-data\"\n        );\n        setSensorData(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error details:\", err);\n        setError(`Error fetching sensor data: ${err.message}`);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Moisture Sensor Data</h1>\n      {loading && <p>Loading data...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {!loading && !error && sensorData.length === 0 && (\n        <p>No sensor data available.</p>\n      )}\n      {sensorData.length > 0 && (\n        <ul>\n          {sensorData.map((data) => (\n            <li key={data._id}>\n              Moisture Level: {data.moistureLevel}, Timestamp:{\" \"}\n              {new Date(data.timestamp).toLocaleString()}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default SensorDataDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC9B,uCACF,CAAC;QACDP,aAAa,CAACM,QAAQ,CAACE,IAAI,CAAC;QAC5BJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZC,OAAO,CAACT,KAAK,CAAC,gBAAgB,EAAEQ,GAAG,CAAC;QACpCP,QAAQ,CAAC,+BAA+BO,GAAG,CAACE,OAAO,EAAE,CAAC;QACtDP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5Bb,OAAO,iBAAIP,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjCf,KAAK,iBAAIL,OAAA;MAAGqB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChD,CAACb,OAAO,IAAI,CAACF,KAAK,IAAIF,UAAU,CAACoB,MAAM,KAAK,CAAC,iBAC5CvB,OAAA;MAAAgB,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChC,EACAjB,UAAU,CAACoB,MAAM,GAAG,CAAC,iBACpBvB,OAAA;MAAAgB,QAAA,EACGb,UAAU,CAACqB,GAAG,CAAEZ,IAAI,iBACnBZ,OAAA;QAAAgB,QAAA,GAAmB,kBACD,EAACJ,IAAI,CAACa,aAAa,EAAC,cAAY,EAAC,GAAG,EACnD,IAAIC,IAAI,CAACd,IAAI,CAACe,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA,GAFnChB,IAAI,CAACiB,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA7CID,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AA+CvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}