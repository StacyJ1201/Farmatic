{"ast":null,"code":"var _jsxFileName = \"/Users/stacyjones/FarmaticVS/Farmatic/moisture-sensor-app/frontend/src/components/MoistureDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoistureDisplay = () => {\n  _s();\n  const [moistureLevel, setMoistureLevel] = useState(null);\n  const [moistureStatus, setMoistureStatus] = useState(\"loading\"); // \"dry\", \"wet\", \"ideal\", or \"loading\"\n  const [loading, setLoading] = useState(true);\n\n  // Add these constants for the image URLs\n  const dryImage = \"https://images.unsplash.com/photo-1504544750208-dc0358e63f7f?auto=format&fit=crop&q=80\";\n  const wetImage = \"https://images.unsplash.com/photo-1525543907410-b2562b6796d6?auto=format&fit=crop&q=80\";\n  const idealImage = \"https://images.unsplash.com/photo-1591857177580-dc82b9ac4e1e?auto=format&fit=crop&q=80\";\n\n  // Add this inline style to your component\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    backgroundColor: \"#f3f4f6\",\n    padding: \"1rem\"\n  };\n  const valueStyle = {\n    fontSize: \"4rem\",\n    fontWeight: \"bold\",\n    marginBottom: \"1.5rem\"\n  };\n  useEffect(() => {\n    const fetchLatestData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8081/api/sensor-data\");\n        if (response.data && response.data.length > 0) {\n          const latestReading = response.data[0];\n          const moistureValue = latestReading.moistureLevel;\n          setMoistureLevel(moistureValue);\n\n          // Define moisture thresholds\n          // You may need to adjust these based on your sensor's range\n          if (moistureValue < 300) {\n            setMoistureStatus(\"dry\");\n          } else if (moistureValue > 700) {\n            setMoistureStatus(\"wet\");\n          } else {\n            setMoistureStatus(\"ideal\");\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching moisture data:\", err);\n        setLoading(false);\n      }\n    };\n\n    // Fetch data immediately\n    fetchLatestData();\n\n    // Then fetch every 3 seconds\n    const interval = setInterval(fetchLatestData, 3000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get the appropriate image and message based on moisture status\n  const getContent = () => {\n    switch (moistureStatus) {\n      case \"dry\":\n        return {\n          image: dryImage,\n          message: \"TOO DRY\",\n          color: \"text-red-600\",\n          description: \"Your soil is too dry for planting. Water it more!\"\n        };\n      case \"wet\":\n        return {\n          image: wetImage,\n          message: \"TOO WET\",\n          color: \"text-blue-600\",\n          description: \"Your soil is too wet for planting. Let it dry out!\"\n        };\n      case \"ideal\":\n        return {\n          image: idealImage,\n          message: \"PERFECT\",\n          color: \"text-green-600\",\n          description: \"Your soil has ideal moisture for planting. Perfect time to plant!\"\n        };\n      default:\n        return {\n          image: null,\n          message: \"Loading...\",\n          color: \"text-gray-600\",\n          description: \"Getting the latest soil moisture data...\"\n        };\n    }\n  };\n  const content = getContent();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: valueStyle,\n      children: loading ? \"...\" : moistureLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl bg-white rounded-lg shadow-lg overflow-hidden\",\n      children: [content.image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: content.image,\n          alt: content.message,\n          className: \"w-full h-64 sm:h-80 object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: `text-5xl sm:text-6xl font-bold ${content.color} bg-white bg-opacity-80 px-6 py-3 rounded-lg`,\n            children: content.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl\",\n          children: content.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 pt-4 border-t border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: [\"Current moisture reading: \", moistureLevel, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"block text-sm text-gray-500 mt-1\",\n              children: [\"Updated at \", new Date().toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(MoistureDisplay, \"2RVxtYO69FV30HzFQRW0T20A0GQ=\");\n_c = MoistureDisplay;\nexport default MoistureDisplay;\nvar _c;\n$RefreshReg$(_c, \"MoistureDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MoistureDisplay","_s","moistureLevel","setMoistureLevel","moistureStatus","setMoistureStatus","loading","setLoading","dryImage","wetImage","idealImage","containerStyle","display","flexDirection","alignItems","justifyContent","minHeight","backgroundColor","padding","valueStyle","fontSize","fontWeight","marginBottom","fetchLatestData","response","get","data","length","latestReading","moistureValue","err","console","error","interval","setInterval","clearInterval","getContent","image","message","color","description","content","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/stacyjones/FarmaticVS/Farmatic/moisture-sensor-app/frontend/src/components/MoistureDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst MoistureDisplay = () => {\n  const [moistureLevel, setMoistureLevel] = useState(null);\n  const [moistureStatus, setMoistureStatus] = useState(\"loading\"); // \"dry\", \"wet\", \"ideal\", or \"loading\"\n  const [loading, setLoading] = useState(true);\n\n  // Add these constants for the image URLs\n  const dryImage =\n    \"https://images.unsplash.com/photo-1504544750208-dc0358e63f7f?auto=format&fit=crop&q=80\";\n  const wetImage =\n    \"https://images.unsplash.com/photo-1525543907410-b2562b6796d6?auto=format&fit=crop&q=80\";\n  const idealImage =\n    \"https://images.unsplash.com/photo-1591857177580-dc82b9ac4e1e?auto=format&fit=crop&q=80\";\n\n  // Add this inline style to your component\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    backgroundColor: \"#f3f4f6\",\n    padding: \"1rem\",\n  };\n\n  const valueStyle = {\n    fontSize: \"4rem\",\n    fontWeight: \"bold\",\n    marginBottom: \"1.5rem\",\n  };\n\n  useEffect(() => {\n    const fetchLatestData = async () => {\n      try {\n        const response = await axios.get(\n          \"http://localhost:8081/api/sensor-data\"\n        );\n\n        if (response.data && response.data.length > 0) {\n          const latestReading = response.data[0];\n          const moistureValue = latestReading.moistureLevel;\n\n          setMoistureLevel(moistureValue);\n\n          // Define moisture thresholds\n          // You may need to adjust these based on your sensor's range\n          if (moistureValue < 300) {\n            setMoistureStatus(\"dry\");\n          } else if (moistureValue > 700) {\n            setMoistureStatus(\"wet\");\n          } else {\n            setMoistureStatus(\"ideal\");\n          }\n\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error fetching moisture data:\", err);\n        setLoading(false);\n      }\n    };\n\n    // Fetch data immediately\n    fetchLatestData();\n\n    // Then fetch every 3 seconds\n    const interval = setInterval(fetchLatestData, 3000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  // Get the appropriate image and message based on moisture status\n  const getContent = () => {\n    switch (moistureStatus) {\n      case \"dry\":\n        return {\n          image: dryImage,\n          message: \"TOO DRY\",\n          color: \"text-red-600\",\n          description: \"Your soil is too dry for planting. Water it more!\",\n        };\n      case \"wet\":\n        return {\n          image: wetImage,\n          message: \"TOO WET\",\n          color: \"text-blue-600\",\n          description: \"Your soil is too wet for planting. Let it dry out!\",\n        };\n      case \"ideal\":\n        return {\n          image: idealImage,\n          message: \"PERFECT\",\n          color: \"text-green-600\",\n          description:\n            \"Your soil has ideal moisture for planting. Perfect time to plant!\",\n        };\n      default:\n        return {\n          image: null,\n          message: \"Loading...\",\n          color: \"text-gray-600\",\n          description: \"Getting the latest soil moisture data...\",\n        };\n    }\n  };\n\n  const content = getContent();\n\n  return (\n    <div style={containerStyle}>\n      {/* Moisture value display */}\n      <div style={valueStyle}>{loading ? \"...\" : moistureLevel}</div>\n\n      {/* Image and status */}\n      <div className=\"w-full max-w-2xl bg-white rounded-lg shadow-lg overflow-hidden\">\n        {content.image && (\n          <div className=\"relative\">\n            <img\n              src={content.image}\n              alt={content.message}\n              className=\"w-full h-64 sm:h-80 object-cover\"\n            />\n            <div className=\"absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center\">\n              <h2\n                className={`text-5xl sm:text-6xl font-bold ${content.color} bg-white bg-opacity-80 px-6 py-3 rounded-lg`}\n              >\n                {content.message}\n              </h2>\n            </div>\n          </div>\n        )}\n\n        <div className=\"p-6\">\n          <p className=\"text-xl\">{content.description}</p>\n\n          {!loading && (\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\n              <p className=\"text-gray-600\">\n                Current moisture reading: {moistureLevel}\n                <span className=\"block text-sm text-gray-500 mt-1\">\n                  Updated at {new Date().toLocaleTimeString()}\n                </span>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MoistureDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}