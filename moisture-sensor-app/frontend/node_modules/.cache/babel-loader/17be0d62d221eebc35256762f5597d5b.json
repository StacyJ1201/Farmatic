{"ast":null,"code":"var _jsxFileName = \"/Users/stacyjones/FarmaticVS/Farmatic/moisture-sensor-app/frontend/src/components/SensorDataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorDataDisplay = () => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make sure this endpoint matches your backend route\n        const response = await axios.get(\"http://localhost:8081/api/sensor-data\");\n        console.log(\"API Response:\", response.data);\n        setSensorData(Array.isArray(response.data) ? response.data : [response.data]);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error details:\", err);\n        setError(`Error fetching sensor data: ${err.message}`);\n        setLoading(false);\n      }\n    };\n    fetchData();\n    // Set up polling every 5 seconds to get fresh data\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Moisture Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), !loading && !error && sensorData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No sensor data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), sensorData.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sensorData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Moisture Level: \", data.moistureLevel, \",\", data.isOptimalForPlanting !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: data.isOptimalForPlanting ? \"green\" : \"red\",\n            fontWeight: \"bold\"\n          },\n          children: data.isOptimalForPlanting ? \" Optimal for planting\" : \" Not optimal for planting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), \"Timestamp: \", new Date(data.timestamp).toLocaleString()]\n      }, data._id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorDataDisplay, \"x9zyruaK15xjWJ0lBIQ7Vs2YtSc=\");\n_c = SensorDataDisplay;\nexport default SensorDataDisplay;\nvar _c;\n$RefreshReg$(_c, \"SensorDataDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SensorDataDisplay","_s","sensorData","setSensorData","error","setError","loading","setLoading","fetchData","response","get","console","log","data","Array","isArray","err","message","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","index","moistureLevel","isOptimalForPlanting","undefined","fontWeight","Date","timestamp","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/stacyjones/FarmaticVS/Farmatic/moisture-sensor-app/frontend/src/components/SensorDataDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst SensorDataDisplay = () => {\n  const [sensorData, setSensorData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make sure this endpoint matches your backend route\n        const response = await axios.get(\n          \"http://localhost:8081/api/sensor-data\"\n        );\n        console.log(\"API Response:\", response.data);\n        setSensorData(\n          Array.isArray(response.data) ? response.data : [response.data]\n        );\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error details:\", err);\n        setError(`Error fetching sensor data: ${err.message}`);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    // Set up polling every 5 seconds to get fresh data\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <h1>Moisture Sensor Data</h1>\n      {loading && <p>Loading data...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {!loading && !error && sensorData.length === 0 && (\n        <p>No sensor data available.</p>\n      )}\n      {sensorData.length > 0 && (\n        <ul>\n          {sensorData.map((data, index) => (\n            <li key={data._id || index}>\n              Moisture Level: {data.moistureLevel},\n              {data.isOptimalForPlanting !== undefined && (\n                <span\n                  style={{\n                    color: data.isOptimalForPlanting ? \"green\" : \"red\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {data.isOptimalForPlanting\n                    ? \" Optimal for planting\"\n                    : \" Not optimal for planting\"}\n                </span>\n              )}\n              <br />\n              Timestamp: {new Date(data.timestamp).toLocaleString()}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default SensorDataDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}